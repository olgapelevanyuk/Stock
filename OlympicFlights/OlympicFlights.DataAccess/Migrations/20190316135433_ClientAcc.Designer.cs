// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicFlights.DataAccess;

namespace OlympicFlights.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190316135433_ClientAcc")]
    partial class ClientAcc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicFlights.DataAccess.AccountManagement.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cln_account_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountLogin")
                        .IsRequired()
                        .HasColumnName("cln_account_login")
                        .HasMaxLength(255);

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasColumnName("cln_account_password")
                        .HasMaxLength(255);

                    b.Property<int>("ClientID")
                        .HasColumnName("cln_account_client_id");

                    b.Property<DateTime>("Created")
                        .HasColumnName("cln_account_created");

                    b.Property<bool>("Role")
                        .HasColumnName("cnl_account_role");

                    b.Property<DateTime>("Updated")
                        .HasColumnName("cln_account_updated");

                    b.HasKey("AccountID");

                    b.HasIndex("ClientID");

                    b.HasIndex("AccountLogin", "AccountPassword");

                    b.ToTable("tbl_accounts");

                    b.HasData(
                        new
                        {
                            AccountID = 1,
                            AccountLogin = "48red",
                            AccountPassword = "Ar555321",
                            ClientID = 1,
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Role = true,
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        },
                        new
                        {
                            AccountID = 2,
                            AccountLogin = "simf11422",
                            AccountPassword = "Ar555321",
                            ClientID = 1,
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Role = false,
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        });
                });

            modelBuilder.Entity("OlympicFlights.DataAccess.CityManagement.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cln_city_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnName("cln_city_name");

                    b.Property<int>("CountryID")
                        .HasColumnName("cln_city_country_id");

                    b.Property<DateTime>("Created")
                        .HasColumnName("cln_city_created");

                    b.Property<DateTime>("Updated")
                        .HasColumnName("cln_city_updated");

                    b.HasKey("CityID");

                    b.HasIndex("CountryID");

                    b.ToTable("tbl_cities");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            CityName = "Moscow",
                            CountryID = 2,
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        },
                        new
                        {
                            CityID = 2,
                            CityName = "Minsk",
                            CountryID = 1,
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        },
                        new
                        {
                            CityID = 3,
                            CityName = "New York",
                            CountryID = 3,
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        });
                });

            modelBuilder.Entity("OlympicFlights.DataAccess.ClientManagement.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientAddress")
                        .IsRequired()
                        .HasColumnName("cln_client_address")
                        .HasMaxLength(255);

                    b.Property<string>("ClientFirstname")
                        .IsRequired()
                        .HasColumnName("cln_client_first_name")
                        .HasMaxLength(30);

                    b.Property<string>("ClientLastname")
                        .IsRequired()
                        .HasColumnName("cln_client_last_name")
                        .HasMaxLength(30);

                    b.Property<DateTime>("Created")
                        .HasColumnName("cln_client_created");

                    b.Property<DateTime>("Updated")
                        .HasColumnName("cln_client_updated");

                    b.HasKey("ClientID");

                    b.ToTable("tbl_clients");

                    b.HasData(
                        new
                        {
                            ClientID = 1,
                            ClientAddress = "Belarus,Brest,st.Suvorova,114,22",
                            ClientFirstname = "Artsiom",
                            ClientLastname = "Lyshchyk",
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        });
                });

            modelBuilder.Entity("OlympicFlights.DataAccess.CountryManagement.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cln_country_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnName("cln_country_name");

                    b.Property<DateTime>("Created")
                        .HasColumnName("cln_country_created");

                    b.Property<DateTime>("Updated")
                        .HasColumnName("cln_country_updated");

                    b.HasKey("CountryID");

                    b.HasIndex("CountryName");

                    b.ToTable("tbl_countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryName = "Belarus",
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        },
                        new
                        {
                            CountryID = 2,
                            CountryName = "Russia",
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        },
                        new
                        {
                            CountryID = 3,
                            CountryName = "United States of America",
                            Created = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692),
                            Updated = new DateTime(2019, 3, 16, 13, 54, 32, 272, DateTimeKind.Utc).AddTicks(6692)
                        });
                });

            modelBuilder.Entity("OlympicFlights.DataAccess.AccountManagement.Account", b =>
                {
                    b.HasOne("OlympicFlights.DataAccess.ClientManagement.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OlympicFlights.DataAccess.CityManagement.City", b =>
                {
                    b.HasOne("OlympicFlights.DataAccess.CountryManagement.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
